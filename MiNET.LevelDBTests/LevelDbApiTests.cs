using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using MiNET.LevelDB;
using NUnit.Framework;

namespace MiNET.LevelDBTests
{
	[TestFixture]
	public class LevelDbApiTests
	{
		//DirectoryInfo directory = new DirectoryInfo(@"D:\Temp\My World\db\");
		DirectoryInfo directory = new DirectoryInfo(@"TestWorld");

		List<byte[]> testKeys = new List<byte[]>()
		{
			new byte[] {0xf6, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x2f, 0x00, 0x01, 0xea, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00},
			new byte[] {0xf7, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x01, 0x0a, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00},

			new byte[] {0xf7, 0xff, 0xff, 0xff, 0xf1, 0xff, 0xff, 0xff, 0x76, 0x01, 0x2d, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00},

			new byte[] {0xf7, 0xff, 0xff, 0xff, 0xfd, 0xff, 0xff, 0xff, 0x2f, 0x05, 0x01, 0x9f, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00},

			new byte[] {0xfa, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xff, 0x2f, 0x02, 0x01, 0xcb, 0x69, 0x00, 0x00, 0x00, 0x00, 0x00},

			new byte[] {0xfa, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xff, 0x2f, 0x03, 0x01, 0xcc, 0x69, 0x00, 0x00, 0x00, 0x00, 0x00},
		};

		[Test]
		public void LevelDbOpenFromDirectory()
		{
			var db = new LDb(directory);
			db.Open();
		}

		[Test]
		public void LevelDbGetValueFromKey()
		{
			var db = new LDb(directory);
			db.Open();
			var result = db.Get(testKeys.First());
			// 08 01 08 00 00 40 44 44 14 41 44 00 70 41 44 44  .....@DD.AD.pADD


			Assert.AreEqual(new byte[] {0x08, 0x01, 0x08, 0x00, 0x00}, result.AsSpan(0, 5).ToArray());
		}

		[Test]
		public void LevelDbRepeatedGetValueFromKey()
		{
			var db = new LDb(directory);
			db.Open();

			foreach (var testKey in testKeys)
			{
				var result = db.Get(testKey);
				Assert.IsNotNull(result, testKey.HexDump());
			}
		}
	}
}